// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should fetch an example from atlaskit 1`] = `
Object {
  "example.js": Object {
    "content": "// @flow
import React from 'react';
import Avatar from '@atlaskit/avatar';
import { Block, Gap } from './packages/elements/avatar/examples-util/helpers';

export default () => (
  <div>
    <Block heading=\\"Circle\\">
      <Avatar name=\\"xxlarge\\" size=\\"xxlarge\\" />
      <Gap />
      <Avatar name=\\"xlarge\\" size=\\"xlarge\\" presence=\\"online\\" />
      <Gap />
      <Avatar name=\\"large\\" size=\\"large\\" presence=\\"offline\\" />
      <Gap />
      <Avatar name=\\"medium\\" size=\\"medium\\" presence=\\"busy\\" />
      <Gap />
      <Avatar name=\\"small\\" size=\\"small\\" presence=\\"focus\\" />
      <Gap />
      <Avatar name=\\"xsmall\\" size=\\"xsmall\\" />
    </Block>
    <Block heading=\\"Square\\">
      <Avatar appearance=\\"square\\" name=\\"xxlarge\\" size=\\"xxlarge\\" />
      <Gap />
      <Avatar
        appearance=\\"square\\"
        name=\\"xlarge\\"
        size=\\"xlarge\\"
        status=\\"approved\\"
      />
      <Gap />
      <Avatar appearance=\\"square\\" name=\\"large\\" size=\\"large\\" status=\\"declined\\" />
      <Gap />
      <Avatar appearance=\\"square\\" name=\\"medium\\" size=\\"medium\\" status=\\"locked\\" />
      <Gap />
      <Avatar appearance=\\"square\\" name=\\"small\\" size=\\"small\\" />
      <Gap />
      <Avatar appearance=\\"square\\" name=\\"xsmall\\" size=\\"xsmall\\" />
    </Block>
  </div>
);
",
  },
  "index.html": Object {
    "content": "<div id=\\"root\\"></div>",
  },
  "index.js": Object {
    "content": "/**
  This CodeSandbox has been automatically generated using
  \`react-codesandboxer\`. If you're curious how that happened, you can
  check out our docs here: https://github.com/noviny/react-codesandboxer

  If you experience any struggles with this sandbox, please raise an issue
  on github. :)
*/
import React from 'react';
import ReactDOM from 'react-dom';
import Example from './example';

ReactDOM.render(
<Example />,
document.getElementById('root')
);",
  },
  "package.json": Object {
    "content": "{
  \\"name\\": \\"react-codesandboxer-example\\",
  \\"version\\": \\"0.0.0\\",
  \\"description\\": \\"A simple example deployed using react-codesandboxer\\",
  \\"main\\": \\"index.js\\",
  \\"dependencies\\": {
    \\"react\\": \\"15.6.0 - 16.2.0\\",
    \\"styled-components\\": \\"1.4.6 - 3\\",
    \\"@atlaskit/theme\\": \\"^2.4.0\\",
    \\"@atlaskit/avatar\\": \\"latest\\",
    \\"react-dom\\": \\"15.6.0 - 16.2.0\\"
  }
}",
  },
  "packages/elements/avatar/examples-util/helpers.js": Object {
    "content": "// @flow
import React from 'react';
import type { Node } from 'react';
import styled from 'styled-components';
import { colors, math, gridSize } from '@atlaskit/theme';

const Wrapper = styled.div\`
  margin-top: \${gridSize}px;
\`;

const ChildrenWrapper = styled.div\`
  align-items: baseline;
  color: \${colors.text};
  display: flex;

  > * {
    margin-right: \${gridSize}px;
  }
\`;

export const Note = styled.p\`
  color: \${colors.N100};
  font-size: \${props => (props.size === 'large' ? '1.15em' : '0.9rem')};
  margin-top: \${math.divide(gridSize, 2)}px;
  margin-bottom: \${math.multiply(gridSize, 2)}px;
\`;

export const Code = styled.code\`
  background-color: \${colors.R50};
  border-radius: 0.2em;
  color: \${colors.R400};
  font-size: 0.85em;
  line-height: 1.1;
  padding: 0.1em 0.4em;
\`;

export const Gap = styled.span\`
  margin-right: \${gridSize}px;
\`;
// $FlowFixMe
export const Dot = styled(Gap)\`
  height: \${math.multiply(gridSize, 3)}px;
  width: \${math.multiply(gridSize, 3)}px;
\`;
export const Heading = styled.div\`
  color: \${colors.subtleHeading};
  display: flex;
  font-size: 0.8rem;
  font-weight: 500;
  margin-bottom: 0.5em;
  text-transform: uppercase;
\`;

export const Block = ({
  children,
  heading,
}: {
  children: ?Node,
  heading?: string,
}) => (
  <Wrapper>
    {heading ? <Heading>{heading}</Heading> : null}
    <ChildrenWrapper>{children}</ChildrenWrapper>
  </Wrapper>
);
",
  },
}
`;

exports[`should fetch an example from react-select 1`] = `
Object {
  "dependencies": Object {
    "@atlaskit/avatar": "latest",
    "@atlaskit/theme": "^2.4.0",
    "react": "15.6.0 - 16.2.0",
    "react-dom": "15.6.0 - 16.2.0",
    "styled-components": "1.4.6 - 3",
  },
  "files": Object {
    "example.js": Object {
      "content": "// @flow
import React from 'react';
import Avatar from '@atlaskit/avatar';
import { Block, Gap } from './packages/elements/avatar/examples-util/helpers';

export default () => (
  <div>
    <Block heading=\\"Circle\\">
      <Avatar name=\\"xxlarge\\" size=\\"xxlarge\\" />
      <Gap />
      <Avatar name=\\"xlarge\\" size=\\"xlarge\\" presence=\\"online\\" />
      <Gap />
      <Avatar name=\\"large\\" size=\\"large\\" presence=\\"offline\\" />
      <Gap />
      <Avatar name=\\"medium\\" size=\\"medium\\" presence=\\"busy\\" />
      <Gap />
      <Avatar name=\\"small\\" size=\\"small\\" presence=\\"focus\\" />
      <Gap />
      <Avatar name=\\"xsmall\\" size=\\"xsmall\\" />
    </Block>
    <Block heading=\\"Square\\">
      <Avatar appearance=\\"square\\" name=\\"xxlarge\\" size=\\"xxlarge\\" />
      <Gap />
      <Avatar
        appearance=\\"square\\"
        name=\\"xlarge\\"
        size=\\"xlarge\\"
        status=\\"approved\\"
      />
      <Gap />
      <Avatar appearance=\\"square\\" name=\\"large\\" size=\\"large\\" status=\\"declined\\" />
      <Gap />
      <Avatar appearance=\\"square\\" name=\\"medium\\" size=\\"medium\\" status=\\"locked\\" />
      <Gap />
      <Avatar appearance=\\"square\\" name=\\"small\\" size=\\"small\\" />
      <Gap />
      <Avatar appearance=\\"square\\" name=\\"xsmall\\" size=\\"xsmall\\" />
    </Block>
  </div>
);
",
    },
    "index.html": Object {
      "content": "<div id=\\"root\\"></div>",
    },
    "index.js": Object {
      "content": "/**
  This CodeSandbox has been automatically generated using
  \`react-codesandboxer\`. If you're curious how that happened, you can
  check out our docs here: https://github.com/noviny/react-codesandboxer

  If you experience any struggles with this sandbox, please raise an issue
  on github. :)
*/
import React from 'react';
import ReactDOM from 'react-dom';
import Example from './example';

ReactDOM.render(
<Example />,
document.getElementById('root')
);",
    },
    "package.json": Object {
      "content": "{
  \\"name\\": \\"react-codesandboxer-example\\",
  \\"version\\": \\"0.0.0\\",
  \\"description\\": \\"A simple example deployed using react-codesandboxer\\",
  \\"main\\": \\"index.js\\",
  \\"dependencies\\": {
    \\"react\\": \\"15.6.0 - 16.2.0\\",
    \\"styled-components\\": \\"1.4.6 - 3\\",
    \\"@atlaskit/theme\\": \\"^2.4.0\\",
    \\"@atlaskit/avatar\\": \\"latest\\",
    \\"react-dom\\": \\"15.6.0 - 16.2.0\\"
  }
}",
    },
    "packages/elements/avatar/examples-util/helpers.js": Object {
      "content": "// @flow
import React from 'react';
import type { Node } from 'react';
import styled from 'styled-components';
import { colors, math, gridSize } from '@atlaskit/theme';

const Wrapper = styled.div\`
  margin-top: \${gridSize}px;
\`;

const ChildrenWrapper = styled.div\`
  align-items: baseline;
  color: \${colors.text};
  display: flex;

  > * {
    margin-right: \${gridSize}px;
  }
\`;

export const Note = styled.p\`
  color: \${colors.N100};
  font-size: \${props => (props.size === 'large' ? '1.15em' : '0.9rem')};
  margin-top: \${math.divide(gridSize, 2)}px;
  margin-bottom: \${math.multiply(gridSize, 2)}px;
\`;

export const Code = styled.code\`
  background-color: \${colors.R50};
  border-radius: 0.2em;
  color: \${colors.R400};
  font-size: 0.85em;
  line-height: 1.1;
  padding: 0.1em 0.4em;
\`;

export const Gap = styled.span\`
  margin-right: \${gridSize}px;
\`;
// $FlowFixMe
export const Dot = styled(Gap)\`
  height: \${math.multiply(gridSize, 3)}px;
  width: \${math.multiply(gridSize, 3)}px;
\`;
export const Heading = styled.div\`
  color: \${colors.subtleHeading};
  display: flex;
  font-size: 0.8rem;
  font-weight: 500;
  margin-bottom: 0.5em;
  text-transform: uppercase;
\`;

export const Block = ({
  children,
  heading,
}: {
  children: ?Node,
  heading?: string,
}) => (
  <Wrapper>
    {heading ? <Heading>{heading}</Heading> : null}
    <ChildrenWrapper>{children}</ChildrenWrapper>
  </Wrapper>
);
",
    },
  },
  "parameters": "N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAYCMK7kBAC0VJhw7uheWBnFOOwAkmDsiZShAORl7OShAhC9dniUAO7sBH4Evq4ADkvp6IrdvUPuRUN4MOQA1uy9C70C7OiU5BMZMIi-BARLcIiSkikQc6EeOFREklQlFYaESkjKFWqtXgDSaGTMu06m1C7Gwq1GdHIMBCqGScAIAlCKRSsDsUy-eFmNjs9U83g2S1g_mxmVs2PcnDgcFCMF21FSFJ-bUQAEozEZJGYIEQlpQBAsAErlSrsMBCIjsAbKgh9ADcUplcsV2oAIgB5ACyqvVmohlSqVyIeoNsvl7AAolhXDLYNbIpqcJJsN7GTBnagzErIeaLTgyhgMgAKMyMT0h32SMSKMxXYZEfQ4NIEd2wfM0ABCiXa6ETA2EOrFqBFuoUymDPpgOE0ZB01Fo9EQIHe7AAAmAoNMXUb2FGVWr_VrIeHpa6FgBBVjRVwXecavoj6JQfyHL6SVybgjb5eGt3AdjlidHDYAcWW7Hkfr3gaWFUOrjScBBqW-iAeeW4CEGXodnAVThNAkj7FA6JwOGZhotOmBgGEUALImIrsNwYjsMm5jsMwbBiLsFiMA-1zHPsrgsKgKR8CA9gQAI5CwOIVEWGRG7gewqDejArFYFgR4CGk_DsPkABeon8OJknSSA7CZrx1Gvks6mUaRfH8Re25CSJYkqbyanyYpIASduqnsEsZRwJi1nUFAaAWbpmlkdpXn6XxjACZeFzCfmrHmTJVnhXZnmOfALmsZQYDjh5Mkaf5WlvulBnUUFxmhdZ-YsKERCRRACmsUVEAlTJcXOagWKsR4eSJGlek5T5WXtTlgVGSFpn8HAUQJGVFWDcNUC1U5CX8GA1x5G13mML52U9Xl_VhUpQ3xJNlnldZWDbSNamrdRki0Uc3XURd9HlExLH8M4ACOoTbhZV0BetIQrOUmQNdZcAvW9MkFWJtlSZ5UVKeD9mnQFK0fblfXeRYyyrNu7iNYNQNlPwKMmZtNkRSA-NQ0TMV4xlfH4tEeSsWjQisNklMdXDmU6WzhmCWjv2YwDOOeaD_DE7J-3RRDkWXgQdP8JgXEeegi1U8tXVLV9PMY_9rGA69uNqULIBVTVe1jYb2TVaVllSzLICPoczMnYjnUc07vXcz9mtYyAOvA_rA3exNo0A4HjtLQjat9d96N_V7Pt6wTB1Hbtoum4dId-QZUg3d1UgyHpzZmK2IA_kc_7wEBMBlgQoF9ZB6bwLBMRQAhMBIRkcBdloFB9vohiSKO46TqgK7TrOCy7ra2rXqusyJKs7B3gAck42IfhPi6VNP074oksA5OvO97zUkSyqgIFb7eQyUBOAhwBsURzBsKSjOgzj7e-n6ageBBHnAJ4EJIOYlcwz6gjA1ag-J2AAHVMg_QuNwWSBBd7ZBwDIYouwohSTQFUCISwHgABJgDPy4G_BS8glhYFAcUUBZhdCQPsDYKA6B4wwJ5vAxByD0CoLYOg0i8QIApFQFUL4ldXjsA8MydyZ9QEWCoDfAhwA5Fyg7rQLABB5AyMuLYRkrhEgPHHNgGhpEiJGAXrxTBnwhGjBSIQBRxDX77XIZQ3Y8gzDUIRGfLAM86ELGXrQAiHC944CWLw2R185QKKUbfHAi8ACMAAGeJGjdhzRoFUKyCjHKUBeARIiiYskvBwFZAi3AEF9HMn0dgAB-TUsScCxIAKyV0qQ8Po8ScAAE4yhOhFMk0iFjsG4IUQ_PA3CQSYETPY0hMANgACZekUM0QMoRXgniRGGdEUZRBQg4QgIyRIkyX7TLmQs5xqB3FgPQm6HxDgV4BMPig6EoTxG_mfr0DAx95HsEIVEjuCoGlJM0V4AQmABBVEyMVMR7TZmV00VEyJ4TokKgACyJL6RYVJ1QMnsHaQADiaUQTRUiYBVH2AI2x7A6mxM0T-dA90HjtNiZXHFOBkWwrcUYq5Cwbm-QQQ8rhcAfznIwXZbB1iKWEKmY4xZHKzDDnwQAMQnFMBVEAsAWl5J47xECFgmhEPcpBe9EzaRFM8slNiCAbLmDgbZuz9mHJIftDYABmU5mjyToDmFarZOyYj2qlQpF1brZVaunDcgAEndAoBrOFjOefC75ijEUd25B4H-MBI2MQKOirRgqjx6NVLAM5GK-zpP2gynAuLumaMxVUKYMByWWvYAC-JSzRUrJEBEIgFaCWaNUdUAk7g4BzQEN23IcC4jOSoZyrxYadX3jtgExMwBdjkEYcwug2ZSIMXulu-QDwV2kTXdADdqAHhVOXpgLdFgd0FCqQ8fEoxmJ7vwoRYiuxGCsLgR9YAt7mLVLIpm-6Yhf1RuYvIKQQGChEQeKgHZUBXH-UYAwk9LDYHohA8eph8YIOSBQ9hugX6MMfskERjI-dQFFxLn-NIndqA9l0P2Awg5D0WH4AVfgDx-B2ihCvWkjRvAZCqO2UM_Br3sH4EzW-YwIxIAkyAdpimxO7FlvAcgowlgxGoJx-Ta5RYdlRFBUMlwYCMkoIkbIuR8j_p48fOosJBMCGU6RfgUQ0A6f4KobAndnNsZAJgVYCYGoQHgDp1jfFuPag8yARpOAABsOB4nsCqJShLszEu-Yi97Q12Rj6GjPjQOA0W6nIvi8l9gzrMt-e_r_f-gD9j5miwAPXS6V-JVX5M1ePKeMCwVotHloPiDrkXIQOkiMVhp8XEvldiWljLJNSKIfkAoJQIBaA-iyAwdT5RaDgu1FUNGCggA",
}
`;
